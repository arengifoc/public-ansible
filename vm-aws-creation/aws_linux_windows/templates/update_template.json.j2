{
    "variables": {
        "aws_access_key":       "{{ '{{' }} env `AWS_ACCESS_KEY_ID` {{ '}}' }}",
        "aws_secret_key":       "{{ '{{' }} env `AWS_SECRET_ACCESS_KEY` {{ '}}' }}"
    },
    "sensitive-variables":      [ "os_adminuser" ],
    "builders": [
        {
            "type":             "amazon-ebs",
            "access_key":       "{{ '{{' }} user `aws_access_key` {{ '}}' }}",
            "secret_key":       "{{ '{{' }} user `aws_secret_key` {{ '}}' }}",
            "source_ami":       "{{ '{{' }} user `vm_ami` {{ '}}' }}",
            "ami_name":         "img_{{ '{{' }} user `vm_name` }}_{{ datetime }}",
            "instance_type":    "{{ '{{' }} user `vm_size` {{ '}}' }}",
            "region":           "{{ '{{' }} user `aws_region` {{ '}}' }}",

{% if os_name | regex_search("windows", ignorecase=True) %}
            "user_data_file":   "files/ConfigureRemotingForAnsible.ps1",
            "communicator":     "winrm",
            "winrm_username":   "administrator",
            "winrm_insecure":   true,
            "winrm_use_ssl":    true,
            "winrm_use_ntlm":   true,
{% else %}
            "ssh_username":     "{{ '{{' }} user `os_adminuser` {{ '}}' }}",
{% endif %}

            "tags": {
                "Name":         "{{ '{{' }} user `vm_name` {{ '}}' }}_{{ datetime }}",
                "Comment":      "Created using IaC"
            }
        }
    ]{% if os_name | regex_search("windows", ignorecase=True) == False %},
        {
            "type":                 "ansible",
            "playbook_file":        "ansible_roles.yml",
            "user":                 "{{ '{{' }} user `os_adminuser` {{ '}}' }}",
            "extra_arguments": [
                "--extra-vars", "os_firstinstall=yes",
                "--extra-vars", "os_update=yes",
                "-b"
        }
    ]
{% endif %}{% if os_name | regex_search("windows", ignorecase=True) %},
    "provisioners": [
        {
            "type":            "powershell",
            "inline": [
                "Invoke-RestMethod -Method GET -Uri http://169.254.169.254/latest/meta-data/public-ipv4 | Out-File C:\\Windows\\Temp\\host -encoding ascii"
            ]
        },
        { 
            "type": "file", 
            "direction": "download", 
            "source": "C:\\Windows\\Temp\\host", 
            "destination": "ipv4-{{ tmpjob }}.txt" 
        },{% else %}{ 
            "type": "shell", 
            "inline": [ 
                "ip addr show dev eth0 | grep -w inet | awk '{ print $2 }' | cut -d / -f 1 > /tmp/.ipv4.txt" 
            ] 
        },
         { 
            "type": "file", 
            "direction": "download", 
            "source": "/tmp/.ipv4.txt", 
            "destination": "ipv4-{{ tmpjob }}.txt" 
        },{% endif %}
        {
            "type":             "shell-local",
            "environment_vars": ["ANSIBLE_HOST_KEY_CHECKING=False"], 
            "inline": [
                "cat ipv4-{{ tmpjob }}.txt >> inventory-{{ tmpjob }}.ini",
                "ansible-playbook -vvv -i inventory-{{ tmpjob }}.ini -e ansible_password='{{ '{{' }} .WinRMPassword {{ '}}' }}' ansible_roles.yml " 
            ]
        }

    ]
}
